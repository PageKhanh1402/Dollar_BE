@using System.Security.Claims
<!DOCTYPE html>
<html dir="ltr" lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="images/favicon.ico" type="image/x-icon">
    <title>EXGame</title>
    <script defer src="js/app.js"></script>
    <link href="css/app.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="~/css/loginStyle.css" rel="stylesheet">
    <script src="https://accounts.google.com/gsi/client" async defer></script>
</head>
<body>
    <!-- preloader start -->
    <div class="preloader">
        <div class="loader"></div>
    </div>
    <!-- preloader end -->
    <!-- scroll to top button start -->
    <button class="scroll-to-top show" id="scrollToTop">
        <i class="ti ti-arrow-up"></i>
    </button>
    <!-- scroll to top button end -->
    <!-- header start -->
    <header id="header" class="absolute w-full z-[999]">
        <div class="mx-auto relative">
            <div id="header-nav" class="w-full px-24p bg-b-neutral-3 relative">
                <div class="flex items-center justify-between gap-x-2 mx-auto py-20p">
                    <nav class="relative xl:grid xl:grid-cols-12 flex justify-between items-center gap-24p text-semibold w-full">
                        <div class="3xl:col-span-6 xl:col-span-5 flex items-center 3xl:gap-x-10 gap-x-5">
                            <a asp-controller="Home" asp-action="Index" class="shrink-0">
                                <img class="xl:w-[170px] sm:w-36 w-30 h-auto shrink-0" src="images/logo.png" alt="brand">
                            </a>
                            <form class="hidden lg:flex items-center sm:gap-3 gap-2 min-w-[300px] max-w-[670px] w-full px-20p py-16p bg-b-neutral-4 rounded-full">
                                <span class="flex-c icon-20 text-white">
                                    <i class="ti ti-search"></i>
                                </span>
                                <input autocomplete="off" class="bg-transparent w-full" type="text" name="search" id="search" placeholder="Search...">
                            </form>
                        </div>
                        <div class="3xl:col-span-6 xl:col-span-7 flex items-center xl:justify-between justify-end w-full">
                            <div class="hidden lg:flex items-center gap-3 shrink-0 ml-4">
                                <!-- Thông báo -->
                                <div class="relative hidden lg:block mb-1">
                                    <a href="chat.html" class="btn-c btn-c-lg btn-c-dark-outline">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="icon">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                            <path d="M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6"></path>
                                            <path d="M9 17v1a3 3 0 0 0 6 0v-1"></path>
                                        </svg>
                                    </a>
                                </div>
                                @if (!User.Identity.IsAuthenticated)
                                {
                                    <!-- Button Login -->
                                    <button id="loginButton" class="login-btn flex items-center gap-2">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                            <path d="M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2" />
                                            <path d="M20 12h-13l3 -3m0 6l-3 -3" />
                                        </svg>
                                        <span>Login</span>
                                    </button>
                                }
                                else
                                {
                                    <div x-data="dropdown" class="dropdown relative shrink-0 lg:block hidden">
                                        <button @@click="toggle()" class="dropdown-toggle gap-24p">
                                            <span class="flex items-center gap-3">
                                                <img class="size-48p rounded-full shrink-0" src="~/images/@User.FindFirstValue("ImageUrl")" alt="profile">
                                                <span class="">
                                                    <span class="text-m-medium text-w-neutral-1 mb-1">@User.FindFirstValue(ClaimTypes.GivenName)</span>
                                                    <span class="text-sm text-w-neutral-4 block">options</span>
                                                </span>
                                            </span>
                                            <span :class="isOpen ? '-rotate-180' : ''" class="btn-c btn-c-lg text-w-neutral-4 icon-32 transition-1">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="icon">
                                                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                                    <path d="M6 9l6 6l6 -6"></path>
                                                </svg>
                                            </span>
                                        </button>
                                        <div x-show="isOpen" x-transition="" @@click.away="close()" class="dropdown-content">
                                            <a href="#" class="dropdown-item">Profile</a>
                                            <a href="#" class="dropdown-item">Settings</a>
                                            <form asp-controller="Auth" asp-action="Logout" method="post" id="logoutForm">
                                                <button type="submit" class="dropdown-item">Logout</button>
                                            </form>
                                            <a href="#" class="dropdown-item">Help</a>
                                        </div>
                                    </div>
                                }
                                <button class="lg:hidden btn-c btn-c-lg btn-c-dark-outline nav-toggole shrink-0">
                                    <i class="ti ti-menu-2"></i>
                                </button>
                            </div>
                        </div>
                    </nav>
                </div>
            </div>
            <!-- Login Modal Wrapper -->
            <div id="loginWrapper" class="login-modal-wrapper fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[9999] hidden">
                @await Html.PartialAsync("~/Views/Auth/_LoginPartial.cshtml", new DollarProject.ViewModels.LoginViewModel())
            </div>
        </div>
    </header>
    <!-- header end -->
    <!-- sidebar start -->
    <div>
        <div class="fixed top-0 left-0 lg:translate-x-0 -translate-x-full h-screen z-30 bg-b-neutral-4 pt-30 px-[27px] transition-1">
            <div class="max-h-screen overflow-y-auto scrollbar-0">
                <div class="flex flex-col items-center xxl:gap-[30px] xl:gap-6 lg:gap-5 gap-4 h-[700px] side-navbar-one">
                    <button class="nav-toggole btn-c btn-c-3xl btn-primary icon-32 shrink-0">
                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="icon">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <path d="M4 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z"></path>
                            <path d="M14 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z"></path>
                            <path d="M4 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z"></path>
                            <path d="M14 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z"></path>
                        </svg>
                    </button>
                    <div class="flex flex-col gap-2 rounded-full bg-b-neutral-1 w-fit p-2 shrink-0">
                        <a asp-controller="Home" asp-action="Index" class="nav-item btn-c btn-c-3xl text-white transition-1">
                            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="icon">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                <path d="M12 10.941c2.333 -3.308 .167 -7.823 -1 -8.941c0 3.395 -2.235 5.299 -3.667 6.706c-1.43 1.408 -2.333 3.621 -2.333 5.588c0 3.704 3.134 6.706 7 6.706s7 -3.002 7 -6.706c0 -1.712 -1.232 -4.403 -2.333 -5.588c-2.084 3.353 -3.257 3.353 -4.667 2.235"></path>
                            </svg>
                        </a>
                        <a asp-controller="Marketplace" asp-action="Index" class="nav-item btn-c btn-c-3xl">
                            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="icon">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                <path d="M6 5h12l3 5l-8.5 9.5a.7 .7 0 0 1 -1 0l-8.5 -9.5l3 -5"></path>
                                <path d="M10 12l-2 -2.2l.6 -1"></path>
                            </svg>
                        </a>
                        <a asp-controller="Wishlist" asp-action="Index" class="nav-item btn-c btn-c-3xl text-white transition-1">
                            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="icon">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                <path d="M18 7v14l-6 -4l-6 4v-14a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4z"></path>
                            </svg>
                        </a>
                        <a asp-controller="Chat" asp-action="Index" class="nav-item btn-c btn-c-3xl">
                            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="icon">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                <path d="M21 14l-3 -3h-7a1 1 0 0 1 -1 -1v-6a1 1 0 0 1 1 -1h9a1 1 0 0 1 1 1v10"></path>
                                <path d="M14 15v2a1 1 0 0 1 -1 1h-7l-3 3v-10a1 1 0 0 1 1 -1h2"></path>
                            </svg>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- sidebar end -->
    <!-- app layout start -->
    <div class="app-layout">
        <!-- main start -->
        @RenderBody()
        <!-- main end -->
        <!-- footer-->
        @await Html.PartialAsync("_Footer")
    </div>
    <!-- app layout end -->
    @RenderSection("Scripts", required: false)
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <script>
        // Handle login button
        document.getElementById("loginButton").addEventListener("click", function () {
            document.getElementById("loginWrapper").classList.remove("hidden");
            document.getElementById("loginWrapper").classList.add("show");
            document.querySelector(".app-layout").classList.add("blur");
        });

        // Handle close login modal
        document.getElementById("closeLogin").addEventListener("click", function () {
            document.getElementById("loginWrapper").classList.remove("show");
            document.getElementById("loginWrapper").classList.add("hidden");
            document.querySelector(".app-layout").classList.remove("blur");
        });

        // Handle click outside modal
        document.getElementById("loginWrapper").addEventListener("click", function (e) {
            if (e.target === this) {
                this.classList.remove("show");
                this.classList.add("hidden");
                document.querySelector(".app-layout").classList.remove("blur");
            }
        });

        // Auto-show login modal if URL has ?showLogin=true
        window.addEventListener('load', function () {
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.get('showLogin') === 'true') {
                document.getElementById("loginWrapper").classList.remove("hidden");
                document.getElementById("loginWrapper").classList.add("show");
                document.querySelector(".app-layout").classList.add("blur");
            }
        });

        // Handle submit form login
        document.getElementById("loginForm").addEventListener("submit", function (e) {
            e.preventDefault();
            const form = this;
            const formData = new FormData(form);
            fetch(form.action, {
                method: form.method,
                body: formData
            })
                .then(response => response.json().then(data => ({ status: response.status, data })))
                .then(({ status, data }) => {
                    if (status === 200 && data.success) {
                        window.location.href = data.redirectUrl;
                    } else {
                        const errorContainer = document.querySelector(".text-danger");
                        errorContainer.innerHTML = data.errors.map(error => `<p>${error}</p>`).join("");
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        });

        // Handle logout
        document.getElementById("logoutForm")?.addEventListener("submit", function (e) {
            e.preventDefault();
            // Clear Google session by redirecting to Google's logout endpoint
            fetch(this.action, {
                method: this.method,
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
                .then(response => {
                    if (response.ok) {
                        // Redirect to Google logout to clear session
                        window.location.href = 'https://accounts.google.com/Logout?continue=' + encodeURIComponent(window.location.origin);
                    }
                })
                .catch(error => {
                    console.error('Logout Error:', error);
                });
        });

        // Handle Google Sign-In callback
        window.addEventListener('load', function () {
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.has('code') || urlParams.has('error')) {
                // Only process callback if not just logged out
                if (!sessionStorage.getItem('justLoggedOut')) {
                    fetch(`/Auth/ExternalLoginCallback?returnUrl=${encodeURIComponent(urlParams.get('returnUrl') || '/')}`, {
                        method: 'GET',
                        headers: {
                            'Accept': 'application/json'
                        }
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                window.location.href = data.redirectUrl;
                            } else {
                                document.getElementById("loginWrapper").classList.remove("hidden");
                                document.getElementById("loginWrapper").classList.add("show");
                                document.querySelector(".app-layout").classList.add("blur");
                                const errorContainer = document.querySelector(".text-danger");
                                errorContainer.innerHTML = data.errors.map(error => `<p>${error}</p>`).join("");
                            }
                        })
                        .catch(error => {
                            console.error('Google Sign-In Error:', error);
                            document.getElementById("loginWrapper").classList.remove("hidden");
                            document.getElementById("loginWrapper").classList.add("show");
                            document.querySelector(".app-layout").classList.add("blur");
                            const errorContainer = document.querySelector(".text-danger");
                            errorContainer.innerHTML = '<p>Google Sign-In failed. Please try again.</p>';
                        });
                } else {
                    // Clear justLoggedOut flag
                    sessionStorage.removeItem('justLoggedOut');
                }
            }
        });
    </script>
</body>
</html>